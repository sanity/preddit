<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="kotlin.io.IoPackage R use(T, jet.Function1&lt;? super T,? extends R&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage boolean isDescendant(java.io.File, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage boolean isDescendant(java.io.File, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage byte[] readBytes$default(java.io.InputStream, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage byte[] readBytes(java.io.InputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage byte[] readBytes(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.BufferedOutputStream buffered$default(java.io.OutputStream, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.BufferedOutputStream buffered(java.io.OutputStream, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.BufferedReader buffered$default(java.io.Reader, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.BufferedReader buffered(java.io.Reader, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.BufferedReader getStdin()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.BufferedWriter buffered$default(java.io.Writer, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.BufferedWriter buffered(java.io.Writer, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.File getDirectory(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.FileReader reader(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.File[] listFiles(java.io.File, jet.Function1&lt;? super java.io.File,? extends java.lang.Boolean&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.InputStream buffered$default(java.io.InputStream, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.InputStream buffered(java.io.InputStream, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.InputStreamReader reader$default(java.io.InputStream, java.nio.charset.Charset, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.InputStreamReader reader(java.io.InputStream, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.InputStreamReader reader(java.io.InputStream, java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.InputStreamReader reader(java.io.InputStream, java.nio.charset.CharsetDecoder)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.OutputStreamWriter writer$default(java.io.OutputStream, java.nio.charset.Charset, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.OutputStreamWriter writer(java.io.OutputStream, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.OutputStreamWriter writer(java.io.OutputStream, java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.io.OutputStreamWriter writer(java.io.OutputStream, java.nio.charset.CharsetEncoder)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String getCanonicalPath(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String getExtension(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String getName(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String getPath(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText$default(java.io.File, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText$default(java.net.URL, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText$default(java.net.URL, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText(java.io.File, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText(java.io.File, java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText(java.io.Reader) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText(java.net.URL, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText(java.net.URL, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText(java.net.URL, java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String readText(java.net.URL, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String relativePath(java.io.File, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.lang.String relativePath(java.io.File, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.util.Iterator&lt;java.lang.String&gt; lineIterator(java.io.BufferedReader)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.util.List readLines$default(java.io.File, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage java.util.List&lt;java.lang.String&gt; readLines(java.io.File, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage jet.ByteIterator iterator(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage long copyTo$default(java.io.File, java.io.File, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage long copyTo$default(java.io.InputStream, java.io.OutputStream, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage long copyTo$default(java.io.Reader, java.io.Writer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage long copyTo(java.io.File, java.io.File, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage long copyTo(java.io.InputStream, java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage long copyTo(java.io.Reader, java.io.Writer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage void appendText$default(java.io.File, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage void appendText(java.io.File, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage void appendText(java.io.File, java.lang.String, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage void recurse(java.io.File, jet.Function1&lt;? super java.io.File,? extends jet.Unit&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage void recurse(java.io.File, jet.Function1&lt;? super java.io.File,? extends jet.Unit&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage void writeText$default(java.io.File, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage void writeText(java.io.File, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage void writeText(java.io.File, java.lang.String, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 boolean isDescendant(java.io.File, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 boolean isDescendant(java.io.File, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.io.File getDirectory(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.io.FileReader reader(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.io.File[] listFiles(java.io.File, jet.Function1&lt;? super java.io.File,? extends java.lang.Boolean&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String getCanonicalPath(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String getExtension(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String getName(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String getPath(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String readText$default(java.io.File, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String readText(java.io.File, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String readText(java.io.File, java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String relativePath(java.io.File, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.lang.String relativePath(java.io.File, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.util.List readLines$default(java.io.File, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 java.util.List&lt;java.lang.String&gt; readLines(java.io.File, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 long copyTo$default(java.io.File, java.io.File, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 long copyTo(java.io.File, java.io.File, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 void appendText$default(java.io.File, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 void appendText(java.io.File, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 void appendText(java.io.File, java.lang.String, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 void recurse(java.io.File, jet.Function1&lt;? super java.io.File,? extends jet.Unit&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 void recurse(java.io.File, jet.Function1&lt;? super java.io.File,? extends jet.Unit&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 void writeText$default(java.io.File, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 void writeText(java.io.File, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.Files.1694133701 void writeText(java.io.File, java.lang.String, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 R use(T, jet.Function1&lt;? super T,? extends R&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 byte[] readBytes$default(java.io.InputStream, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 byte[] readBytes(java.io.InputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 byte[] readBytes(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.BufferedOutputStream buffered$default(java.io.OutputStream, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.BufferedOutputStream buffered(java.io.OutputStream, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.BufferedReader buffered$default(java.io.Reader, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.BufferedReader buffered(java.io.Reader, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.BufferedReader getStdin()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.BufferedWriter buffered$default(java.io.Writer, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.BufferedWriter buffered(java.io.Writer, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.InputStream buffered$default(java.io.InputStream, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.InputStream buffered(java.io.InputStream, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.InputStreamReader reader$default(java.io.InputStream, java.nio.charset.Charset, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.InputStreamReader reader(java.io.InputStream, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.InputStreamReader reader(java.io.InputStream, java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.InputStreamReader reader(java.io.InputStream, java.nio.charset.CharsetDecoder)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.OutputStreamWriter writer$default(java.io.OutputStream, java.nio.charset.Charset, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.OutputStreamWriter writer(java.io.OutputStream, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.OutputStreamWriter writer(java.io.OutputStream, java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.io.OutputStreamWriter writer(java.io.OutputStream, java.nio.charset.CharsetEncoder)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.lang.String readText$default(java.net.URL, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.lang.String readText$default(java.net.URL, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.lang.String readText(java.io.Reader) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.lang.String readText(java.net.URL, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.lang.String readText(java.net.URL, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.lang.String readText(java.net.URL, java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.lang.String readText(java.net.URL, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 java.util.Iterator&lt;java.lang.String&gt; lineIterator(java.io.BufferedReader)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 jet.ByteIterator iterator(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 long copyTo$default(java.io.InputStream, java.io.OutputStream, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 long copyTo$default(java.io.Reader, java.io.Writer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 long copyTo(java.io.InputStream, java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="kotlin.io.IoPackage.src.JIO.-1835975732 long copyTo(java.io.Reader, java.io.Writer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
</root>

